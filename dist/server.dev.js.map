{"version":3,"sources":["server.js"],"names":["express","require","dotenv","morgan","bodyparser","path","cookieParser","app","connectDB","config","PORT","process","env","use","json","urlencoded","extended","set","viewsPath","join","__dirname","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMM,GAAG,GAAGP,OAAO,EAAnB;;AAEA,IAAMQ,SAAS,GAAGP,OAAO,CAAC,8BAAD,CAAzB,C,CAIA;;;AACAC,MAAM,CAACO,MAAP,CAAc;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAAd;AACA,IAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAH,GAAG,CAACM,GAAJ,CAAQV,MAAM,CAAC,MAAD,CAAd,E,CAEA;;AACAK,SAAS,G,CAET;;AACAD,GAAG,CAACM,GAAJ,CAAQb,OAAO,CAACc,IAAR,EAAR;AACAP,GAAG,CAACM,GAAJ,CAAQP,YAAY,EAApB,E,CAEA;;AACAC,GAAG,CAACM,GAAJ,CAAQT,UAAU,CAACW,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAT,GAAG,CAACU,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAEA;;AACA,IAAMC,SAAS,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAlB,C,CAEA;;AACAb,GAAG,CAACM,GAAJ,CAAQb,OAAO,UAAP,CAAeK,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CACA;AAEA;;AACAb,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAaZ,OAAO,CAAC,wBAAD,CAApB;AACAM,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAaZ,OAAO,CAAC,+BAAD,CAApB;AAKAM,GAAG,CAACc,MAAJ,CAAWX,IAAX,EAAiB,YAAM;AACrBY,EAAAA,OAAO,CAACC,GAAR,mDAAuDb,IAAvD;AACD,CAFD","sourcesContent":["const express = require('express');\r\nconst dotenv = require('dotenv');\r\nconst morgan = require('morgan');\r\nconst bodyparser = require('body-parser');\r\nconst path = require('path');\r\nconst cookieParser = require('cookie-parser');\r\nconst app = express();\r\n \r\nconst connectDB = require('./server/database/connection');\r\n\r\n\r\n\r\n// Dotenv config\r\ndotenv.config({ path: 'config.env' });\r\nconst PORT = process.env.PORT || 8080;\r\n\r\n// Log requests with Morgan\r\napp.use(morgan('tiny'));\r\n\r\n// mongoDB connection\r\nconnectDB();  \r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cookieParser());\r\n\r\n// Parse requests with body-parser\r\napp.use(bodyparser.urlencoded({ extended: true }));\r\n\r\n// Set view engine\r\napp.set('view engine', 'ejs');\r\n\r\n// Define the path to the views directory \r\nconst viewsPath = path.join(__dirname, 'views');\r\n\r\n// Serve static assets\r\napp.use(express.static(path.join(__dirname, 'assets')));\r\n// app.use(express.static(viewsPath));\r\n\r\n// load routers\r\napp.use('/', require('./server/Routes/router')); \r\napp.use('/', require('./server/Routes/playersRoutes')); \r\n\r\n\r\n\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port http://localhost:${PORT}`); \r\n});\r\n  "],"file":"server.dev.js"}